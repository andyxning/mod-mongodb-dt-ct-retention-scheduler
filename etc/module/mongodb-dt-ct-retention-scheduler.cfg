## Module:  mongodb-dt-ct-retention-scheduler
## Loaded by: Scheduler
# In Broker: Store downtime and comment records about services
#            and hosts to a MongoDB database

define module {
    module_name     mongodb-dt-ct-retention-scheduler
    module_type     mongodb_dt_ct_retention_scheduler
    
    # Time in seconds to let the update operation go on.
    # This value should be given according to the downtime and comment records
    # update interval. For example, if we specify downtime and coment records 
    # update interval to be 1 * 60s, then timeout value should be lower than 
    # 1 * 60s. Default is 50s.
    timeout     50
    
    # Specify if we connect to replica set(HA) MongoDB instances or 
    # just a stand alone MongoDB instance. Default to False, i.e. no HA.
    high_availability  true
  
    
    # with 'high_available' be 'true',
    # Addresses of Replica Set MongoDB instances separated by comma
    # for high availability.
    replica_set   host1:port1, host2:port2,..., hostn:portn
    
    # with 'high_available' be 'false'
    # Address of stand alone MongoDB instance
    #stand_alone    host:port

  
    # We will store infos in 'database' with three collections:
    #
    # services collection for service info
    # downtimes collection for downtime info about service and host
    # comments collection for comment info about service and host
    #
    # Default to 'shinken_retention_scheduler'.
    database        shinken_dt_ct_retention_scheduler
    
    # MongoDB URL options
    # w=1&wtimeoutMS=3000   Write Concern
    # journal=true      Journal 
    # replicaSet=shinken     replica set name
    url_options     w=1&wtimeoutMS=3000&journal=true&replicaSet=shinken&connectTimeoutMS=3000
        
    # Authorize to the specific MongoDB 'database'.
    # Both default to 'shinken_dt_ct_retention_scheduler'.
    username        shinken_dt_ct_retention_scheduler
    password        shinken_dt_ct_retention_scheduler
    
}